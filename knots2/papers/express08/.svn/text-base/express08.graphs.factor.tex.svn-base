\section{Factoring knots as processes through graphs as processes} \label{MainThm}

Two observations come together to provide the main theorem. The first
is an entirely technical observation that the encoding of the graph in
example \ref{knotex} can be refactored as

\begin{equation}
  \meaningof{K}_{\pi} = \Pi_{i = 0}^{n-1} \meaningof{C(i)}_{\pi}(v_{\omega(i,0)},...,v_{\omega(i,3)})
\end{equation}

where $n$ is the crossing number of $K$, and $\omega: n \times 4 \to
2n$, gives the index into the list of ports, $v_0 ... v_{2n-1}$ used
to wire the crossing vertices together in a manner consistent with the
chosen knot diagram of $K$.

The second and more significant observation is that the process
associated with
$\meaningof{C(i)}_{\pi}(v_{\omega(i,0)},...,v_{\omega(i,3)})$ may be
replaced by a process that \emph{simulates} it. In some real sense we
are treating the process associated with the vertex of a knot shadow
as the minimal specification of the \emph{interface} of the crossing
behavior, treating what goes on inside the crossing as a black
box. This notion is entirely consistent with and in some sense
strengthens Kauffman's idea of virtual knots by formalizing the sense
in which they may be virtualized.

The process we substitute for this minimal specification codes what it
means for a wire to cross over or under. We interpret this as a
synchronization. Thus, a crossing ``circuit'' of the $i$-th crossing
of a knot, $K$, is a process,
$\meaningof{C(i)}_{\pi}(x_0,x_1,y_0,y_1,u)$, parameterized in $4+1$
ports corresponding to the in-coming and out-going arcs between each
crossing together with an \emph{additional} port representing the
synchronizer for letting signals `cross over' in the gates. The wire
crossing over is allowed to transmit the signal without waiting while
the under-crossing wire must wait for an additional input on a
synchronization channel. To alert the under-crossing wire that it may
now proceed, the over-crossing wire must fire off an output. Thus,
setting $(\vec{a}) = (x_0,x_1,y_0,y_1,u)$ a crossing circuit is coded
as the following process.

\begin{eqnarray}
  C(\vec{a}) & := & x_1?(s).y_0!(s).(C(\vec{a})|u!) + y_0?(s).x_1!(s).(C(\vec{a})|u!) \nonumber \\
  & & + x_0?(s).u?.y_1!(s).(C(\vec{a})) + y_1?(s).u?.x_0!(s).(C(\vec{a})) 
\end{eqnarray}

Recognizing that the maps from vertices to names are really a
convenient way of parameterizing the encoding in a set of names
corresponding to the vertices, the encoding of a knot, $K$, becomes

\begin{equation}
  \meaningof{K}_{\pi} = (v_0 ... v_{2n-1}) \Pi_{i = 0}^{n-1} (\nu \; u)\meaningof{C(i)}_{\pi}(v_{\omega(i,0)},...,v_{\omega(i,3)},u)
\end{equation}

Meredith and Snyder have already shown that this encoding enjoys the
property that two knots are ambient isotopic iff their encodings as
processes are weakly bisimilar. What we show here as that this
correspondence factors through the equivalence of graphs noted in
theorem \ref{grapheqthm}. In fact, this result follows immediately
from the choice of $\meaningof{C(i)}_{\pi}(x_0,x_1,y_0,y_1,u)$ to
simulate
$\meaningof{C(i)}_{\pi}(v_{\omega(i,0)},...,v_{\omega(i,3)})$.

